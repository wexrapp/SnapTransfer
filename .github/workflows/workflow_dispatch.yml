name: SpeedShare Repository Dispatch
on:
  workflow_dispatch:
    inputs:
      version:
        description: 'App Version'
        required: true
        default: '1.0.0'
      version_code:
        description: 'App Version Code'
        required: true
        default: '1'
  repository_dispatch:
    types:
      - api
env:
  # APPÂêçÁß∞
  APP_NAME: SpeedShare
  ZIP_NAME: Speed Share

jobs:
  # build-linux:
  #   runs-on: ubuntu-20.04
  #   environment: default
  #   steps:
  #     - name: Checkout the code
  #       uses: actions/checkout@v3
  #       with:
  #         ref: ${{ github.event.client_payload.ref }}

  #     - name: Checkout speed_share_extension code
  #       uses: actions/checkout@v3
  #       with:
  #         repository: 'mengyanshou/speed_share_extension'
  #         token: ${{ secrets.GH_PAT }}
  #         ref: 'main'
  #         path: "${{ github.workspace }}/speed_share_extension"

  #     - name: Checkout behavior_api code
  #       uses: actions/checkout@v3
  #       with:
  #         repository: 'mengyanshou/behavior_api'
  #         token: ${{ secrets.GH_PAT }}
  #         ref: 'main'
  #         path: "${{ github.workspace }}/behavior_api"
      
  #     - name: Checkout user_center_frontend code
  #       uses: actions/checkout@v3
  #       with:
  #         repository: 'mengyanshou/user_center_frontend'
  #         token: ${{ secrets.GH_PAT }}
  #         ref: 'main'
  #         path: "${{ github.workspace }}/user_center_frontend"

  #     - name: move file
  #       run: |
  #         mv "${{ github.workspace }}/user_center_frontend" "${{ github.workspace }}/../user_center_frontend"
  #         mv "${{ github.workspace }}/speed_share_extension" "${{ github.workspace }}/../speed_share_extension"
  #         mv "${{ github.workspace }}/behavior_api/behavior.dart" ./lib/global/behavior.dart
  #         mv "${{ github.workspace }}/behavior_api/behavior.g.dart" ./lib/global/behavior.g.dart

  #     - name: Install and set Flutter version
  #       uses: subosito/flutter-action@v2
  #       with:
  #         channel: 'stable'

  #     - name: Setup other environment
  #       run: |
  #         sudo apt-get update -y
  #         sudo apt-get install -y ninja-build libgtk-3-dev
  #         # tray manager need
  #         sudo apt-get install libayatana-appindicator3-dev

  #     - name: Building...
  #       run: |
  #         flutter config --enable-linux-desktop
  #         ./scripts/build/linux/build_linux.sh
          
  #     - name: Packaging...
  #       run: ./scripts/build/linux/generate_linux.sh
      
  #     - name: Upload..
  #       run: |
  #         ni default -u
  #         # curl -X POST -F "file=@${{ env.ZIP_NAME }}.deb" http://nightmare.press:444/api/v1/file/uploadfile/
  #         # curl --upload-file "${{ env.ZIP_NAME }}.deb" https://transfersh.com/${{ env.APP_NAME }}.deb

  clone-code:
    runs-on: ${{ inputs.runs-on }}
    environment: default
    steps:
      - name: Checkout current code
        uses: actions/checkout@v3
        with:
          ref: ${{ github.event.client_payload.ref }}
        
      - name: Checkout speed_share_extension code
        uses: actions/checkout@v3
        with:
          repository: 'mengyanshou/speed_share_extension'
          token: ${{ secrets.GH_PAT }}
          ref: 'main'
          path: "${{ github.workspace }}/speed_share_extension"

      - name: Checkout behavior_api code
        uses: actions/checkout@v3
        with:
          repository: 'mengyanshou/behavior_api'
          token: ${{ secrets.GH_PAT }}
          ref: 'main'
          path: "${{ github.workspace }}/behavior_api"

      - name: Checkout user_center_frontend code
        uses: actions/checkout@v3
        with:
          repository: 'mengyanshou/user_center_frontend'
          token: ${{ secrets.GH_PAT }}
          ref: 'main'
          path: "${{ github.workspace }}/user_center_frontend"

      - name: move file
        run: |
          move "${{ github.workspace }}/user_center_frontend" "${{ github.workspace }}/../user_center_frontend"
          move "${{ github.workspace }}/speed_share_extension" "${{ github.workspace }}/../speed_share_extension"
          mv "${{ github.workspace }}/behavior_api/behavior.dart" ./lib/global/behavior.dart
          mv "${{ github.workspace }}/behavior_api/behavior.g.dart" ./lib/global/behavior.g.dart
  build-mac:
    # runs-on: macos-latest
    runs-on: self-hosted-mac
    environment: default

    steps:
      # - run: echo "üéâ The job was automatically triggered by a ${{ github.event_name }} event."
      # - run: echo "üêß This job is now running on a ${{ runner.os }} server hosted by GitHub!"
      # - run: echo "üîé The name of your branch is ${{ github.ref }} and your repository is ${{ github.repository }}."
      # - name: Check out repository code
      #   uses: actions/checkout@v3
      # - run: echo "üí° The ${{ github.repository }} repository has been cloned to the runner."
      # - run: echo "üñ•Ô∏è The workflow is now ready to test your code on the runner."
      
      - name: Checkout current code
        uses: actions/checkout@v3
        with:
          ref: ${{ github.event.client_payload.ref }}

      - name: Checkout speed_share_extension code
        uses: actions/checkout@v3
        with:
          repository: 'mengyanshou/speed_share_extension'
          token: ${{ secrets.GH_PAT }}
          ref: 'main'
          path: "${{ github.workspace }}/speed_share_extension"

      - name: Checkout behavior_api code
        uses: actions/checkout@v3
        with:
          repository: 'mengyanshou/behavior_api'
          token: ${{ secrets.GH_PAT }}
          ref: 'main'
          path: "${{ github.workspace }}/behavior_api"
      
      - name: Checkout user_center_frontend code
        uses: actions/checkout@v3
        with:
          repository: 'mengyanshou/user_center_frontend'
          token: ${{ secrets.GH_PAT }}
          ref: 'main'
          path: "${{ github.workspace }}/user_center_frontend"

      - name: Checkout ni CLI code
        uses: actions/checkout@v3
        with:
          repository: 'mengyanshou/ni'
          token: ${{ secrets.GH_PAT }}
          ref: 'main'
          path: "${{ github.workspace }}/ni"

      - name: move file
        run: |
          mv "${{ github.workspace }}/user_center_frontend" "${{ github.workspace }}/../user_center_frontend"
          mv "${{ github.workspace }}/speed_share_extension" "${{ github.workspace }}/../speed_share_extension"
          mv "${{ github.workspace }}/behavior_api/behavior.dart" ./lib/global/behavior.dart
          mv "${{ github.workspace }}/behavior_api/behavior.g.dart" ./lib/global/behavior.g.dart

      - name: List files in the repository
        run: |
          ls ${{ github.workspace }}/..

      - name: Setup node environment
        uses: actions/setup-node@v2
      
      - name: Install and set Flutter version
        uses: subosito/flutter-action@v2
        with:
          channel: 'stable'

      - name: Setup CLI environment
        run: |
          cd ${{ github.workspace }}/ni
          dart pub get
          
      - name: Setup other environment
        run: npm install -g appdmg
        
      - name: Building&&Packaging
        run: |
          export PATH=$PATH:${{ github.workspace }}/ni
          ni release --build-mac-dmg

      - name: Upload
        run: |
          export PATH=$PATH:${{ github.workspace }}/ni
          ni default -u
            
  build-windows:
    # The type of runner that the job will run on
    # runs-on: windows-latest
    runs-on: self-hosted-windows
    environment: default
    
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - name: Checkout current code
        uses: nightmare-space/speed_share/.github/workflows/clone_code.yaml.yml@main
        with:
          runs-on: self-hosted-windows
        secrets:
          envPAT: ${{ secrets.envPAT }}


      - name: Install and set Flutter version
        uses: subosito/flutter-action@v2
        with:
          channel: 'stable'
          
      - name: Building...
        run: |
          flutter config --enable-windows-desktop
          flutter build windows --dart-define=VERSION=${{ github.event.client_payload.version }} --dart-define=VERSION_CODE=${{ github.event.client_payload.version_code }} -t lib/main_personal.dart

      - name: Packaging
        run: |
          .\scripts\build\windows\patch_executable.bat
          Compress-Archive -Path .\build\windows\runner\Release\* -DestinationPath "${{ env.ZIP_NAME }}_Windows.zip"

      - name: Upload
        run: |
          pwd